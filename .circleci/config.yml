version: 2
jobs:

  # Run tests.
  Test:
    docker:
      - image: ubuntu:24.04
    environment:
      DEBIAN_FRONTEND: noninteractive
      PIP_BREAK_SYSTEM_PACKAGES: 1
    working_directory: ~/repo
    steps:
      - run: apt update -y
      - run: apt install -y git ssh
      - checkout
      - run: apt install -y python3 python3-pip python3-gdal python3-numpy nodejs
      - run: pip3 install '.[large]'
      - run: python3 lambda.py
      - run: python3 setup.py test
      - run: node tests.js
  
  # Ensure that packages can be built in deploy step
  Build:
    docker:
      - image: ubuntu:24.04
    environment:
      PIP_BREAK_SYSTEM_PACKAGES: 1
    working_directory: ~/repo
    steps:
      - run: apt update -y
      - run: apt install -y git ssh
      - checkout
      - run: pip3 install '.[deploy]'
      - run: make planscore-lambda.zip
      - run: python3 -c 'import planscore.website as pw, flask_frozen as ff; ff.Freezer(pw.app).freeze()'

  # Deploy to live site!
  Deploy:
    docker:
      - image: ubuntu:24.04
    environment:
      PIP_BREAK_SYSTEM_PACKAGES: 1
    working_directory: ~/repo
    steps:
      - run: apt update -y
      - run: apt install -y git ssh
      - checkout
      - run: pip3 install '.[deploy]'
      # Install Node things (not slow enough to cache)
      - run: npm install -g aws-cdk@2.17.0
      - run: make live-deploy

  # Update metrics-gathering code
  Metrics:
    docker:
      - image: ubuntu:24.04
    environment:
      PIP_BREAK_SYSTEM_PACKAGES: 1
    working_directory: ~/repo
    steps:
      - run: apt update -y
      - run: apt install -y git ssh
      - checkout
      - run: pip3 install -U pip awscli
      - run: make live-metrics

workflows:
  version: 2
  Everything:
    jobs:
      - Test
      - Build:
          filters:
            branches:
              only:
                - main
      - Deploy:
          requires:
            - Test
            - Build
          filters:
            branches:
              only:
                - main
      - Metrics:
          requires:
            - Deploy
          filters:
            branches:
              only:
                - main
