version: 2
jobs:

  # Run tests.
  Test:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - run: pyenv global 3.6.5
      - restore_cache:
          keys:
            - test-dependencies-py-{{ checksum "setup.py" }}
      - run: sudo add-apt-repository -y ppa:migurski/planscore
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y libgeos-c1v5=3.5.1-3~xenial0 libgdal20=2.2.2+dfsg-1~xenial1 libgdal-dev=2.2.2+dfsg-1~xenial1 libspatialindex-dev
      - run: CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal pip3 install "GDAL <= `gdal-config --version`"
      - run: pip3 install 'numpy < 2'
      - run: pip3 install .
      - save_cache:
          key: test-dependencies-py-{{ checksum "setup.py" }}
          paths:
            - /opt/circleci/.pyenv/versions/3.6.5
      - run: python3 lambda.py
      - run: python3 setup.py test
      - run: NODE_PATH=`pwd` node tests.js
  
  # Ensure that packages can be built in deploy step
  Build:
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/repo
    steps:
      - checkout
      # Install Python things
      - run: pyenv global 3.9.1
      - restore_cache:
          key: build-dependencies-py-{{ checksum "setup.py" }}
      - run: pip3 install '.[deploy]'
      - save_cache:
          key: build-dependencies-py-{{ checksum "setup.py" }}
          paths:
            - /opt/circleci/.pyenv/versions/3.9.1
      # Build PlanScore thing
      - run: make planscore-lambda.zip
      - run: python3 -c 'import planscore.website as pw, flask_frozen as ff; ff.Freezer(pw.app).freeze()'
      - persist_to_workspace:
          root: ~/repo
          paths:
            - planscore-lambda.zip
            - gdal-geos-numpy-python.tar.gz

  # Deploy to live site!
  Deploy:
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/repo
    steps:
      - checkout
      # Install Python things
      - run: pyenv global 3.9.1
      - restore_cache:
          key: build-dependencies-py-{{ checksum "setup.py" }}
      - run: pip3 install '.[deploy]'
      # Install Node things (not slow enough to cache)
      - run: npm install -g aws-cdk@1.92.0
      # Build PlanScore thing
      - attach_workspace:
          at: ~/repo
      - run: make live-deploy

workflows:
  version: 2
  everything:
    jobs:
      - Test
      - Build:
          filters:
            branches:
              only:
                - main
      - Deploy:
          requires:
            - Test
            - Build
          filters:
            branches:
              only:
                - main
